{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chef/chef.component.html","webpack:///./src/app/chef/chef.component.scss","webpack:///./src/app/chef/chef.component.ts","webpack:///./src/app/shared/http/github-pages.interceptor.ts","webpack:///./src/app/shared/model/CookbookEvent.ts","webpack:///./src/app/shared/service/chef-ingredients.service.ts","webpack:///./src/app/shared/service/chef.service.ts","webpack:///./src/app/shared/service/cookbook-event.service.ts","webpack:///./src/app/shared/service/ingredients.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/state/chef-ingredients.store.ts","webpack:///./src/app/shared/state/chef.store.ts","webpack:///./src/app/shared/state/cookbook-event.store.ts","webpack:///./src/app/shared/state/ingredients.store.ts","webpack:///./src/app/shared/state/multiple-chefs.store.ts","webpack:///./src/app/shared/state/store.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-chef></app-chef>\"","module.exports = \"\"","import { Component, Inject, LOCALE_ID } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'giftshop';\n\n  constructor(translateService: TranslateService,\n              @Inject(LOCALE_ID) locale: string) {\n\n    translateService.setDefaultLang(locale);\n    translateService.use(locale);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule, TranslateModuleConfig, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { AppComponent } from './app.component';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedModule } from './shared/shared.module';\nimport { ChefComponent } from './chef/chef.component';\n\nexport function translateFactory(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, '/assets/il8n/', '.json');\n}\n\nconst IL8N_CONFIG = <TranslateModuleConfig> {\n  loader: {\n    provide: TranslateLoader,\n    useFactory: translateFactory,\n    deps: [HttpClient]\n  }\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChefComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    SharedModule.forRoot(),\n    TranslateModule.forRoot(IL8N_CONFIG)\n  ],\n  providers: [{ provide: LOCALE_ID, useValue: 'en-US' }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor() {}\n }","module.exports = \"\\n<li *ngFor= \\\"let chef of chefArray;\\\">\\n    <span>{{ chef.name }}</span>\\n    </li>\\n\\n\\n    <form (ngSubmit)=\\\"submitChefForm()\\\" autocomplete=\\\"off\\\" [formGroup]=\\\"chefRequestForm\\\">\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"chefIdControl\\\">\\n            <input type=\\\"submit\\\" value=\\\"Get\\\">\\n        </div>\\n    </form>\\n\\n\\n    <ng-container *ngIf=\\\"chef.id && chef.inventory\\\">\\n    <ng-container *ngIf=\\\"chef.inventory.length\\\">\\n        <li *ngFor= \\\"let inven of chef.inventory;\\\">\\n            <span>{{inven.name}}</span>\\n        </li>\\n    </ng-container>\\n</ng-container>\"","module.exports = \"\"","import { ChefIngredientsService } from './../shared/service/chef-ingredients.service';\nimport { ChefIngredientsStore } from './../shared/state/chef-ingredients.store';\nimport { takeWhile } from 'rxjs/operators';\nimport { MultipleChefsStore } from './../shared/state/multiple-chefs.store';\nimport { ChefStore } from './../shared/state/chef.store';\nimport { ChefService } from './../shared/service/chef.service';\nimport { Component, OnInit } from '@angular/core';\nimport { mapAction } from '../shared/state/store';\nimport { Chef } from '../shared/model/Chef';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as _ from 'lodash';\nimport { IngredientsService } from '../shared/service/ingredients.service';\nimport { IngredientsStore } from '../shared/state/ingredients.store';\n\n@Component({\n  selector: 'app-chef',\n  templateUrl: './chef.component.html',\n  styleUrls: ['./chef.component.scss'],\n  providers: [\n    ChefStore,\n    ChefIngredientsStore,\n    IngredientsStore,\n    MultipleChefsStore\n  ]\n})\nexport class ChefComponent implements OnInit {\n\n  chefRequestForm: FormGroup;\n  chefArray = <Chef[]>[];\n  chef: Chef;\n  alive: boolean;\n\n  constructor(private formBuilder: FormBuilder,\n              private chefService: ChefService,\n              private chefStore: ChefStore,\n              private ingredientService: IngredientsService,\n              private ingredientStore: IngredientsStore,\n              private chefIngredientsStore: ChefIngredientsStore,\n              private chefIngredientsService: ChefIngredientsService,\n              private multipleChefsStore: MultipleChefsStore) {}\n\n  ngOnInit() {\n    this.alive = true;\n    this.chefRequestForm = this.formBuilder.group({\n      chefIdControl: ['', Validators.required]\n    });\n\n    this.chefService.getChefs().pipe(mapAction('LOADED')).subscribe(this.multipleChefsStore);\n    this.multipleChefsStore.pipe(takeWhile(() => this.alive)).subscribe(array => {\n      this.chefArray = array;\n    });\n\n    this.chefStore.pipe(takeWhile(() => this.alive)).subscribe(chef => {\n      if(chef.id) {\n        this.chefIngredientsService.getChefIngredientsById(chef.id).pipe(mapAction('LOADED')).subscribe(this.chefIngredientsStore);\n      }\n      this.chef = chef;\n    });\n    \n    this.chefIngredientsStore.pipe(takeWhile(() => this.alive)).subscribe(inventory => {\n      if (this.chef) {\n        this.chef.inventory = inventory;\n        let allIngredientIds = [];\n        inventory.forEach(next => allIngredientIds.push(next.ingredientId));\n        this.ingredientService.getIngredientsById(allIngredientIds).pipe(mapAction('LOADED')).subscribe(this.ingredientStore);\n      }\n    });\n\n    this.ingredientStore.pipe(takeWhile(() => this.alive)).subscribe(array => {\n      if(this.chef) {\n        if (this.chef.inventory.length) {\n          this.chef.inventory.forEach((ingredient, index) => {\n            let storeIngredient = _.find(array, {id: ingredient.id});\n            this.chef.inventory[index].name = storeIngredient.name;\n          });\n        }\n      }\n    });\n  }\n\n  getChef(id: number): void {\n    this.chefService.getChefById(id).pipe(mapAction('LOADED')).subscribe(this.chefStore);\n  }\n\n  submitChefForm(): void {\n    this.getChef(this.chefRequestForm.get('chefIdControl').value);\n  }\n\n}\n","import { NgZone } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class GithubPagesInterceptor implements HttpInterceptor {\n href: string = '';\n  constructor(private ngZone: NgZone) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.ngZone.run(() => {\n      this.href = window.location.href;\n    });\n\n    if (this.href.includes('https://bgw7.github.io/')) {\n      if (request.url.includes('/api/')) {\n        let jsonServerUrl = request.url.replace('/api/', '/bgw7/angular-redux/');\n      request = request.clone({\n        url: `https://my-json-server.typicode.com${jsonServerUrl}`\n      });\n      }\n\n      if (request.url.includes('/assets/il8n/')) {\n        let translateFileUrl = request.url.replace('/assets/il8n/', '/assets/il8n/');\n      request = request.clone({\n        url: translateFileUrl\n      });\n      }\n    }\n\n    return next.handle(request);\n  }\n}","import { Chef } from \"./Chef\";\n\nexport const EMPTY_COOKBOOK_EVENT = <CookbookEvent> {};\n\nexport interface CookbookEvent {\n    Chef?: Chef;\n}","import { ChefIngredient } from '../model/Ingredient';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ChefIngredientsService {\n    readonly API_URL = '/api/chefIngredients'\n\n    constructor(private http: HttpClient){}\n\n    getChefIngredientsById(id: number): Observable<ChefIngredient[]> {\n        return this.http.get<ChefIngredient[]>(`${this.API_URL}`, { params: new HttpParams().set('chefId', String(id)) });\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Chef } from '../model/Chef';\nimport { Observable, of, forkJoin } from 'rxjs';\n\n@Injectable()\nexport class ChefService {\n    readonly API_URL = '/api/chefs'\n\n    constructor(private http: HttpClient) {}\n\n    getChefs(): Observable<Chef[]> {\n        return this.http.get<Chef[]>(`${this.API_URL}`);\n    }\n\n    getChefById(id: number): Observable<Chef> {\n        return this.http.get<Chef>(`${this.API_URL}/${id}`);\n    }\n\n    updateChef(chef: Chef): Observable<{}> {\n        return this.http.put(`${this.API_URL}`, chef);\n    }\n}","import { mapAction } from './../state/store';\nimport { takeWhile, filter } from 'rxjs/operators';\nimport { CookbookEventStore } from './../state/cookbook-event.store';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Injectable, NgZone, OnDestroy } from \"@angular/core\";\nimport { CookbookEvent } from '../model/CookbookEvent';\nimport { Chef } from '../model/Chef';\n\ndeclare var EventSource: any;\n\n@Injectable()\nexport class CookbookEventService implements OnDestroy {\n\n    readonly API_URL = '/api/cookbook-events';\n\n    _subject = new Subject<CookbookEvent>();\n    _chef$ = new BehaviorSubject<Chef>(<Chef>{});\n    _chefId: number;\n    _eventSource: EventSource;\n    alive = true;\n\n    constructor(private ngZone: NgZone,\n                private cookbookEventStore: CookbookEventStore) {\n                    this.init();\n                }\n    init(): void {\n        this._subject.asObservable().pipe(\n            takeWhile(() => this.alive),\n            mapAction('ON_EVENT'))\n        .subscribe(this.cookbookEventStore);\n\n        this._chef$.pipe(\n            takeWhile(() => this.alive),\n            filter(chef => this.hasChefIdChanged(chef.id)))\n            .subscribe(chef => this.resetEventSource(chef));\n    }\n\n    resetEventSource(chef: Chef): void {\n        this.closeEventSource();\n        this._chefId = !!chef.id ? chef.id : 0;\n        if (this._chefId) {\n            this.openEventSource();\n        }\n    }\n\n    openEventSource(): void {\n        this._eventSource = new EventSource(`${this.API_URL}/${this._chefId}`);\n\n        this._eventSource.onmessage = (event: MessageEvent) => {\n            try {\n                let cookbookEvent: CookbookEvent = JSON.parse(event.data);\n                this.ngZone.run(() => this._subject.next(cookbookEvent));\n            } catch(error) {\n                console.log('Error parsing cookbook eventsource message: ', error);\n            }\n        }\n\n        this._eventSource.onerror = () => {\n            if(this._eventSource.readyState === 2) {\n                this.ngZone.run(() => this._eventSource.close());\n            };\n        }\n    }\n\n    closeEventSource(): void {\n        if(this._eventSource) {\n            this.ngZone.run(() => this._eventSource.close());\n        }\n    }\n\n    hasChefIdChanged(id: number): boolean {\n        return this._chefId !== id;\n    }\n\n    ngOnDestroy(): void {\n        this.closeEventSource();\n        this.alive = false;\n    }\n}","import { Ingredient } from './../model/Ingredient';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IngredientsService {\n\n    readonly API_URL = '/api/ingredients';\n\n    constructor(private http: HttpClient) {}\n\n    getIngredients(): Observable<Ingredient[]> {\n        return this.http.get<Ingredient[]>(`${this.API_URL}`);\n    }\n\n    getIngredientsById(id : number[]): Observable<Ingredient[]> {\n        let requestParam = '';\n        id.forEach((nextId, index) => {\n            requestParam = index === id.length - 1 ? requestParam.concat('id=', nextId.toString()) : requestParam.concat('id=', nextId.toString(), '&');\n        });\n        return this.http.get<Ingredient[]>(`${this.API_URL}?${requestParam}`);\n    }\n}","import { ChefIngredientsService } from './service/chef-ingredients.service';\nimport { ChefService } from './service/chef.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\nimport { CookbookEventService } from './service/cookbook-event.service';\nimport { CookbookEventStore } from './state/cookbook-event.store';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { GithubPagesInterceptor } from './http/github-pages.interceptor';\nimport { IngredientsService } from './service/ingredients.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TranslateModule\n    ],\n    exports: [\n        CommonModule,\n        TranslateModule,\n        FormsModule,\n        ReactiveFormsModule\n    ]\n})\nexport class SharedModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CookbookEventService,\n                CookbookEventStore,\n                ChefService,\n                ChefIngredientsService,\n                IngredientsService,\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: GithubPagesInterceptor,\n                    multi: true\n                  }\n            ]\n        };\n    }\n}","import { ChefIngredient } from './../model/Ingredient';\nimport { Action, Store } from './store';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class ChefIngredientsStore extends Store<ChefIngredient[]> {\n    constructor(){\n        super([], {\n            LOADED: (state: ChefIngredient[], action: Action): ChefIngredient[] => [...action.payload],\n            UPDATED: (state: ChefIngredient[], action: Action): ChefIngredient[] => [...action.payload]\n        });\n    }\n}","import { Action, Store } from './store';\nimport { Injectable } from '@angular/core';\nimport { Chef } from '../model/Chef';\n\n@Injectable()\nexport class ChefStore extends Store<Chef> {\n    constructor(){\n        super(<Chef>{}, {\n            LOADED: (state: Chef, action: Action): Chef => ({ ...action.payload }),\n            UPDATED: (state: Chef, action: Action): Chef => ({ ...action.payload })\n        });\n    }\n}","import 'rxjs/add/observable/of';\nimport { EMPTY_COOKBOOK_EVENT } from './../model/CookbookEvent';\nimport { Injectable, OnDestroy } from \"@angular/core\";\nimport { Store, Action } from \"./store\";\nimport { CookbookEvent } from \"../model/CookbookEvent\";\nimport { Observable } from 'rxjs';\nimport { takeWhile, filter, mergeMap } from 'rxjs/operators';\nimport { ChefStore } from './chef.store';\n\n@Injectable()\nexport class CookbookEventStore extends Store<CookbookEvent> implements OnDestroy {\n    sideEffects;\n    alive: boolean;\n\n    constructor(private chefStore: ChefStore) {\n\n    super(EMPTY_COOKBOOK_EVENT, {\n        ON_EVENT: (state: CookbookEvent, action: Action): CookbookEvent => ({ ...state, ...action.payload })\n    });\n\n    this.init();\n    }\n\n    init(): void {\n        this.alive = true;\n        this.sideEffects = {\n            Chef: {\n                action: chef => Observable.of(<Action>{ type: 'UPDATED', payload: chef }),\n                store: this.chefStore\n            }\n        };\n\n        this.subscribeEffectedStores();\n    }\n\n    subscribeEffectedStores(): void {\n        Object.keys(this.sideEffects).forEach(key => {\n            this.createSubscription(key);\n        });\n    }\n\n    createSubscription(model: string): void {\n        this.pipe(\n            takeWhile(() => this.alive),\n            filter((event: CookbookEvent) => model in event),\n            mergeMap(event => this.getAction(event, model)))\n            .subscribe(this.sideEffects[model].store);\n    }\n\n    getAction(event: CookbookEvent, model: string): Observable<Action> {\n        return this.sideEffects[model].action(event[model]);\n    }\n}","import { Ingredient } from './../model/Ingredient';\nimport { Action, Store } from './store';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class IngredientsStore extends Store<Ingredient[]> {\n    constructor(){\n        super([], {\n            LOADED: (state: Ingredient[], action: Action): Ingredient[] => [...action.payload],\n            UPDATED: (state: Ingredient[], action: Action): Ingredient[] => [...action.payload]\n        });\n    }\n}","import { Action, Store } from './store';\nimport { Injectable } from '@angular/core';\nimport { Chef } from '../model/Chef';\n\n@Injectable()\nexport class MultipleChefsStore extends Store<Chef[]> {\n    constructor(){\n        super(<Chef[]>[], {\n            LOADED: (state: Chef[], action: Action): Chef[] => [...action.payload]\n        });\n    }\n}","import { OnDestroy } from '@angular/core';\nimport { distinctUntilChanged, map, scan } from 'rxjs/operators';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nexport type Action = {\n    type: string;\n    payload: any;\n};\n\nexport const mapAction = (type: string) => map(payload => ({ type, payload }));\n\nexport type Reducer<T> = (state: T, action: Action) => T;\n\nexport abstract class Store<T> extends BehaviorSubject<T> implements OnDestroy {\n    private _dispatcher = new Subject<Action>();\n\n    constructor(initialState: T, reducers: { [key: string]: Reducer<T> }) {\n        super(initialState);\n\n        this._dispatcher.pipe(scan(\n            (state: T, action: Action): T => \n            (reducers[action.type]) ? reducers[action.type](state, action): state, this.getValue()\n        ))\n        .subscribe(state => super.next(state));\n    }\n\n    getState(): T {\n        let value = this.getValue();\n        return Object.assign(value instanceof Array ? []: {}, value);\n    }\n\n    dispatch(action: Action): void {\n        this._dispatcher.next(action);\n    }\n\n    next(value): void {\n        this._dispatcher.next(value);\n    }\n\n    complete(): void {}\n\n    select<K extends keyof T>(key: K): Observable<T[K]> {\n        return this.pipe(\n            map(obs => obs[key]), \n            distinctUntilChanged());\n    }\n\n    ngOnDestroy(): void {\n        this.complete();\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}